/*
 * Generated by Bluespec Compiler, version 2014.05.C (build 33930, 2014-05-28)
 * 
 * On Thu May  3 17:08:20 IST 2018
 * 
 */

/* Generation options: */
#ifndef __mkEllBMVM_h__
#define __mkEllBMVM_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkEllBMVM module */
class MOD_mkEllBMVM : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
  tUInt32 const PARAM_lut_num;
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_in;
  MOD_Fifo<tUInt32> INST_in_fifo;
  MOD_BRAM<tUInt8,tUInt32,tUInt8> INST_lut_memory;
  MOD_Reg<tUInt8> INST_lut_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_lut_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_lut_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_lut_serverAdapter_cnt_3;
  MOD_Fifo<tUInt32> INST_lut_serverAdapter_outDataCore;
  MOD_Wire<tUInt8> INST_lut_serverAdapter_outData_deqCalled;
  MOD_Wire<tUInt32> INST_lut_serverAdapter_outData_enqData;
  MOD_Wire<tUInt32> INST_lut_serverAdapter_outData_outData;
  MOD_Reg<tUInt8> INST_lut_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_lut_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_lut_serverAdapter_writeWithResp;
  MOD_Reg<tUInt32> INST_out;
  MOD_Fifo<tUInt32> INST_out_fifo;
  MOD_Reg<tUInt8> INST_row_num;
  MOD_Reg<tUInt8> INST_state;
 
 /* Constructor */
 public:
  MOD_mkEllBMVM(tSimStateHdl simHdl, char const *name, Module *parent, tUInt32 ARG_lut_num);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_x__h9405;
  tUInt8 DEF_b__h1362;
  tUInt8 DEF_lut_serverAdapter_s1___d50;
  tUInt8 DEF_x__h9411;
  tUInt8 DEF_lut_serverAdapter_cnt_3_whas____d23;
  tUInt8 DEF_lut_serverAdapter_cnt_2_whas____d21;
  tUInt8 DEF_lut_serverAdapter_cnt_1_whas____d20;
  tUInt8 DEF_lut_serverAdapter_s1_0_BIT_0___d51;
  tUInt8 DEF_state_3_EQ_2___d70;
  tUInt8 DEF_row_num_7_EQ_0___d69;
 
 /* Local definitions */
 private:
  tUInt32 DEF_x__h9431;
  tUInt32 DEF_x__h964;
  tUInt8 DEF_x__h9401;
 
 /* Rules */
 public:
  void RL_lut_serverAdapter_outData_setFirstCore();
  void RL_lut_serverAdapter_outData_setFirstEnq();
  void RL_lut_serverAdapter_outData_enqOnly();
  void RL_lut_serverAdapter_outData_deqOnly();
  void RL_lut_serverAdapter_outData_enqAndDeq();
  void RL_lut_serverAdapter_cnt_finalAdd();
  void RL_lut_serverAdapter_s1__dreg_update();
  void RL_lut_serverAdapter_stageReadResponseAlways();
  void RL_lut_serverAdapter_moveToOutFIFO();
  void RL_lut_serverAdapter_overRun();
  void RL_initiateBMVM();
  void RL_receive();
  void RL_complete();
 
 /* Methods */
 public:
  tUInt32 METH_get();
  tUInt8 METH_RDY_get();
  void METH_put(tUInt32 ARG_put_x);
  tUInt8 METH_RDY_put();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkEllBMVM &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkEllBMVM &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkEllBMVM &backing);
};

#endif /* ifndef __mkEllBMVM_h__ */
